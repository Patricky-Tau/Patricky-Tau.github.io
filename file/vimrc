call plug#begin('$HOME/.vim/plugged')
Plug 'mg979/vim-visual-multi'
Plug 'tpope/vim-surround'
Plug 'jiangmiao/auto-pairs'
Plug 'scrooloose/nerdcommenter'
Plug 'AndrewRadev/splitjoin.vim'

Plug 'catppuccin/vim', { 'as': 'catppuccin' }
Plug 'karb94/neoscroll.nvim'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
call plug#end()

silent! color catppuccin_macchiato
let g:VM_theme             = 'iceblue'
let g:airline_theme        = 'angr'
hi Normal ctermfg=252 ctermbg=none

nnoremap <C-j> :m .+1<CR>==
nnoremap <C-k> :m .-2<CR>==
inoremap <C-j> <ESC>:m .+1<CR>==gi
inoremap <C-k> <ESC>:m .-2<CR>==gi
vnoremap <C-j> :m '>+1<CR>gv=gv
vnoremap <C-k> :m '<-2<CR>gv=gv

noremap s <nop>
noremap sk :set nosplitbelow<CR>:split<CR>:set splitbelow<CR>
noremap sj :set splitbelow<CR>:split<CR>
noremap sh :set nosplitright<CR>:vsplit<CR>:set splitright<CR>
noremap sl :set splitright<CR>:vsplit<CR>
noremap <UP> :res +5<CR>
noremap <DOWN> :res -5<CR>
noremap <LEFT> :vertical resize-5<CR>
noremap <RIGHT> :vertical resize+5<CR>

set autochdir
set backspace=indent,eol,start
set cursorline
set expandtab tabstop=4 shiftwidth=4 softtabstop=4 autoindent
set incsearch ignorecase smartcase
set list listchars=tab:\|\ ,trail:â–«
set number relativenumber
set scrolloff=4
set wrap mouse=a

silent !mkdir -p $HOME/.vim/tmp/backup
silent !mkdir -p $HOME/.vim/tmp/undo
set backupdir=$HOME/.vim/tmp/backup,.
set directory=$HOME/.vim/tmp/backup,.

let mapleader=" "
noremap ; :
map <LEADER>Y :w !clip.exe<CR><CR>

func! SearchPlaceHolder()
    call search("<++>", 'w')
    :norm zz<CR>
endfunc
map <LEADER><LEADER> <ESC>:call SearchPlaceHolder()<CR>c4l
map <LEADER>m mko<++><ESC>`k:delmarks k<CR>

noremap r :call CompileRunGcc()<CR>
func! CompileRunGcc()
    exec "w"
    exec "!g++ % -std=c++23 -g -Wall -Wextra -O2 -o %<"
    term ./%<
endfunc

noremap <LEADER><CR> :nohlsearch<CR>

""" NERDCommenter
let g:NERDSpaceDelims			= 1
let g:NERDCompactSexyComs		= 1
let g:NERDDefaultAlign		   = 'left'
let g:NERDAltDelims_java		 = 1
let g:NERDCustomDelimiters	   = {
            \ 'php': { 'left': '/*','right': '*/' },
            \ 'html': { 'left': '<!--','right': '-->' },
            \ 'py': { 'left': '#' },
            \ 'sh': { 'left': '#' } }
let g:NERDCommentEmptyLines	  = 1
let g:NERDTrimTrailingWhitespace = 1

""" sticky line highlight
highlight LineHighlight ctermbg=gray guibg=black
nnoremap <silent> <LEADER>x :call matchadd('LineHighlight', '\%'.line('.').'l')<CR>
nnoremap <silent> <LEADER>X :call clearmatches()<CR>

au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
au TextChanged,TextChangedI <buffer> if &readonly == 0 && filereadable(bufname('%')) | silent write | endif
